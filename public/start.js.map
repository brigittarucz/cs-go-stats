{"version":3,"file":"start.js","sourceRoot":"","sources":["../client/start.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,CAAC,QAAQ;IACxB,OAAO,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC5C,CAAC;AACD,MAAM,cAAc;IAChB,YAAoB,KAAK;QAAL,UAAK,GAAL,KAAK,CAAA;QAEzB,oBAAe,GAAG;YACd,UAAU,EAAE,kBAAkB;YAC9B,UAAU,EAAE,kBAAkB;YAC9B,QAAQ,EAAE,wBAAwB;YAClC,YAAY,EAAE,oCAAoC;YAClD,YAAY,EAAE,oCAAoC;YAClD,YAAY,EAAE,gBAAgB;YAC9B,WAAW,EAAE,+BAA+B;YAC5C,UAAU,EAAE,iCAAiC;YAC7C,UAAU,EAAE,8BAA8B;SAC7C,CAAC;QAEF,eAAU,GAAG,GAAG,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxB,IAAI,CAAC,SAAS,CACV,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,EACvB,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAC9C,CAAC;YACF,IAAI,CAAC,SAAS,CACV,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EACtB,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAC9C,CAAC;YACF,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,KAAK,CAAC,UAAU,EACrB,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAChD,CAAC;YACF,IAAI,CAAC,WAAW,CACZ,IAAI,CAAC,KAAK,CAAC,SAAS,EACpB,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAChD,CAAC;QACN,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,IAAI,EAAE,aAAa,EAAE,EAAE;YAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC;QACnC,CAAC,CAAC;QAEF,gBAAW,GAAG,CAAC,KAAK,EAAE,eAAe,EAAE,EAAE;YACrC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACnB,MAAM,QAAQ,GAAG,UAAU,CACvB,IAAI,CAAC,eAAe,CAAC,YAAY,CACpC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC1B,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,SAAS;oBAC3D,IAAI,CAAC;gBACT,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACP,CAAC,CAAC;IAhD0B,CAAC;CAiDhC;AAED,CAAC,KAAK,IAAI,EAAE;IACR,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAC1D,MAAM,OAAO,GAAG,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;IAEjC,MAAM,sBAAsB,GAAG,IAAI,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACjE,sBAAsB,CAAC,UAAU,EAAE,CAAC;IACpC,2EAA2E;IAE3E,qDAAqD;IACrD,qDAAqD;IACrD,8CAA8C;IAC9C,wEAAwE;IACxE,QAAQ;IAER,wCAAwC;IACxC,4CAA4C;IAC5C,+DAA+D;IAC/D,YAAY;IACZ,QAAQ;IAER,kCAAkC;AACtC,CAAC,CAAC,EAAE,CAAC","sourcesContent":["function getElement(selector) {\n    return document.querySelector(selector);\n}\nclass domManipulator {\n    constructor(private stats) {}\n\n    elementSelector = {\n        titleTeam1: \".users_team_1 h3\",\n        titleTeam2: \".users_team_2 h3\",\n        username: \".header_team_user-name\",\n        wrapperTeam1: \".users_team_1 .header_team_wrapper\",\n        wrapperTeam2: \".users_team_2 .header_team_wrapper\",\n        userTemplate: \".template-user\",\n        mainSpender: \".main_general_article-spender\",\n        mainKiller: \".main_general_article-deadliest\",\n        mainWeapon: \".main_general_article-weapon\",\n    };\n\n    initialize = () => {\n        console.log(this.stats);\n        this.loadTitle(\n            this.stats.initTeams.CT,\n            getElement(this.elementSelector.titleTeam1)\n        );\n        this.loadTitle(\n            this.stats.initTeams.T,\n            getElement(this.elementSelector.titleTeam2)\n        );\n        this.loadPlayers(\n            this.stats.initTeamCT,\n            getElement(this.elementSelector.wrapperTeam1)\n        );\n        this.loadPlayers(\n            this.stats.initTeamT,\n            getElement(this.elementSelector.wrapperTeam2)\n        );\n    };\n\n    loadTitle = (team, titleSelector) => {\n        console.log(team);\n        titleSelector.innerHTML = team;\n    };\n\n    loadPlayers = (users, wrapperSelector) => {\n        users.forEach((user) => {\n            const template = getElement(\n                this.elementSelector.userTemplate\n            ).content.cloneNode(true);\n            template.querySelector(this.elementSelector.username).innerHTML =\n                user;\n            wrapperSelector.appendChild(template);\n        });\n    };\n}\n\n(async () => {\n    const res = await fetch(\"http://localhost:3000/getStats\");\n    const resJson = await res.json();\n\n    const domManipulatorInstance = new domManipulator(resJson.stats);\n    domManipulatorInstance.initialize();\n    // const template = getElement(\"#template-matrix\").content.cloneNode(true);\n\n    //     for (let i = 1; i <= Math.pow(size, 2); i++) {\n    //         const div = document.createElement(\"div\");\n    //         div.className = `${i}-matrix-cell`;\n    //         template.querySelector(\"#container-matrix\").appendChild(div);\n    //     }\n\n    //     for (let i = 1; i <= size; i++) {\n    //         for (let j = 1; j <= size; j++) {\n    //             this.multidimensionPositionalArray.push([j, i]);\n    //         }\n    //     }\n\n    //     node.appendChild(template);\n})();\n"]}