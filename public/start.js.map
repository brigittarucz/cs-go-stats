{"version":3,"file":"start.js","sourceRoot":"","sources":["../client/start.ts"],"names":[],"mappings":"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","sourcesContent":["function getElement(selector) {\n    return document.querySelector(selector);\n}\nclass domManipulator {\n    constructor(private stats) {}\n\n    elementSelector = {\n        titleTeam1: \".users_team_1 h3\",\n        titleTeam2: \".users_team_2 h3\",\n        username: \".header_team_user-name\",\n        scoreTeam1: \".score_team_1\",\n        scoreTeam2: \".score_team_2\",\n        wrapperTeam1: \".users_team_1 .header_team_wrapper\",\n        wrapperTeam2: \".users_team_2 .header_team_wrapper\",\n        userTemplate: \".template-user\",\n        mainSpender: \".main_general_article-spender\",\n        mainKiller: \".main_general_article-deadliest\",\n        mainWeapon: \".main_general_article-weapon\",\n    };\n\n    initialize = () => {\n        console.log(this.stats);\n        this.loadTitle(\n            this.stats.initTeams.CT,\n            getElement(this.elementSelector.titleTeam1)\n        );\n        this.loadTitle(\n            this.stats.initTeams.T,\n            getElement(this.elementSelector.titleTeam2)\n        );\n        this.loadPlayers(\n            this.stats.initTeamCT,\n            getElement(this.elementSelector.wrapperTeam1)\n        );\n        this.loadPlayers(\n            this.stats.initTeamT,\n            getElement(this.elementSelector.wrapperTeam2)\n        );\n\n        const deadliestSpender = this.getDeadliestSpender(\n            this.stats.userStatsMain\n        );\n\n        getElement(this.elementSelector.mainSpender).innerHTML =\n            deadliestSpender;\n\n        const deadliestUser = this.getDeadliestUser(this.stats.userStatsMain);\n\n        getElement(this.elementSelector.mainKiller).innerHTML = deadliestUser;\n    };\n\n    loadTitle = (team: string, titleSelector: HTMLElement) => {\n        titleSelector.innerHTML = team;\n    };\n\n    loadPlayers = (users: string[], wrapperSelector: HTMLElement) => {\n        users.forEach((user) => {\n            const template = getElement(\n                this.elementSelector.userTemplate\n            ).content.cloneNode(true);\n            template.querySelector(this.elementSelector.username).innerHTML =\n                user;\n            wrapperSelector.appendChild(template);\n        });\n    };\n\n    getDeadliestSpender = (usersStats) => {\n        const spentSums: number[] = [];\n        for (const user in usersStats) {\n            spentSums.push(usersStats[user].moneySpent);\n        }\n\n        const maxValue = Math.max(...spentSums);\n        let username: string;\n\n        for (const user in usersStats) {\n            if (usersStats[user].moneySpent === maxValue) {\n                username = user;\n                return username;\n            }\n        }\n    };\n\n    getDeadliestUser = (usersStats) => {\n        // extract max from each then compare to each other\n        const killings: number[] = [];\n        for (const user in usersStats) {\n            killings.push(usersStats[user].totalKills);\n        }\n        const maxValue = Math.max(...killings);\n\n        for (const user in usersStats) {\n            if (usersStats[user].totalKills === maxValue) {\n                return user;\n            }\n        }\n    };\n}\n\n(async () => {\n    const res = await fetch(\"http://localhost:3000/getStats\");\n    const resJson = await res.json();\n\n    const domManipulatorInstance = new domManipulator(resJson.stats);\n    domManipulatorInstance.initialize();\n})();\n"]}